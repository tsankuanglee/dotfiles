# first time with this config, press Ctrl-A Shift-I to install all plugins
set-option -g @plugin 'tmux-plugins/tpm'

# system
set-option -g @plugin 'tmux-plugins/tmux-resurrect'
## create a new session if there's none
new-session
## reload config
bind-key r source-file ~/.tmux.conf \; display-message "Local config reloaded..."
# bind-key R source-file /etc/tmux.conf \; display-message "Global config reloaded..."

# tmux-sensible settings

# keys
## Allows for faster key repetition
set-option -s escape-time 0

# Increase scrollback buffer size from 2000 to 50000 lines
set-option -g history-limit 50000

# Increase tmux messages display duration from 750ms to 3s
set-option -g display-time 3000

# Refresh 'status-left' and 'status-right' more often, from every 15s to 5s
set-option -g status-interval 2

# Emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set-option -g status-keys emacs

# Focus events enabled for terminals that support them
set-option -g focus-events on

# Super useful when using "grouped sessions" and multi-monitor setup
set-window-option -g aggressive-resize on

# sensible prefix
unbind-key C-b
set-option -g prefix C-a
bind-key C-a last-window

## send C-a
## Allows us to use C-a a <command> to send commands to a TMUX session inside another TMUX session
bind-key a send-prefix

## Vi copypaste mode
set-window-option -g mode-keys vi

## ctrl arrow keys
set-window-option -g xterm-keys on

# clipboard
set-option -s set-clipboard external

## Activity monitoring
#set-window-option -g monitor-activity on
#set-option -g visual-activity on

# screen tools

# jump in copy mode
set-option -g @plugin 'schasse/tmux-jump'
set-option -g @jump-key 'u'

# search/copy text from screen history
# (use lead+TAB to launch)
set-option -g @plugin 'laktak/extrakto'
#
# mouse scrolls
set-option -g @plugin 'nhdaly/tmux-better-mouse-mode'
set-option -g @scroll-down-exit-copy-mode off

# mouse toggle
## (convenient for copying multiple lines in a pane)
bind-key O set-option mouse\; display-message "mouse is now #{?mouse,on,off}"


# windows
# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
set-window-option -g aggressive-resize on
## auto window rename
set-window-option -g automatic-rename
## swap-window
#bind-key C-S-Left swap-window -t -1
#bind-key C-S-Right swap-window -t +1

# panes (hjkl:switch HJKL:resize |-\_:split <>:move_window)
set-option -g @plugin 'tmux-plugins/tmux-pain-control'
## pane movement
# bind-key F command-prompt -p "join pane from:" { join-pane -s "%%" }
# bind-key S command-prompt -p "send pane to:"   { join-pane -t "%%" }
bind-key T choose-window 'join-pane -h -t "%%"'  # Horizontal split
bind-key t choose-window 'join-pane -v -t "%%"'  # Vertical split

bind-key F choose-window 'join-pane -v -s "%%"'  # Horizontal split
bind-key f choose-window 'join-pane -v -s "%%"'  # Vertical split


# color and styles

# If running inside tmux ($TMUX is set), then change the status line to red
%if #{TMUX}
set-option -g status-bg red
%endif

# Enable RGB colour if running in xterm(1)
set-option -sa terminal-overrides ",xterm*:Tc"

#set-option -g default-terminal "screen-256color"
#set-option -g default-terminal "xterm-256color"
set-option -g default-terminal "tmux-256color"
set-option -g @plugin 'seebi/tmux-colors-solarized'
set-option -g @colors-solarized 'dark'

# highlight active window tab, and pane
set-window-option -g window-status-current-style fg=black,bg=white
set-option -g window-style 'fg=colour247,bg=colour236'
set-option -g window-active-style 'fg=colour250,bg=black'

# tome (commandline cheatsheet, also REPL)
set-option -g @plugin 'laktak/tome'
set-option -g @tome_playbook '~/.local/share/tome/.playbook.sh'
# keybinds to avoid with "p: previous window"
set-option -g @tome_key 'C-p'
set-option -g @tome_scratch_key 'P'

# interactive menu
# (use lead+\ to activate)
set-option -g @plugin 'jaclu/tmux-menus'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# TO INSTALL: git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
run '~/.tmux/plugins/tpm/tpm'

# sorted keybinds
# C-a     custom: last-window
# C-o     built-in: Rotate through the panes
# C-z     built-in: Suspend the current client
# Space   built-in: Select next layout
# !       built-in: Break pane to a new window
# #       built-in: List all paste buffers
# $       built-in: Rename current session
# &       built-in: Kill current window
# '       built-in: Prompt for window index to select
# (       built-in: Switch to previous client
# )       built-in: Switch to next client
# ,       built-in: Rename current window
# .       built-in: Move the current window
# /       built-in: Describe key binding
# 0       built-in: Select window 0
# 1       built-in: Select window 1
# 2       built-in: Select window 2
# 3       built-in: Select window 3
# 4       built-in: Select window 4
# 5       built-in: Select window 5
# 6       built-in: Select window 6
# 7       built-in: Select window 7
# 8       built-in: Select window 8
# 9       built-in: Select window 9
# :       built-in: Prompt for a command
# ;       built-in: Move to the previously active pane
# =       built-in: Choose a paste buffer from a list
# ?       built-in: List key bindings
# C       built-in: Customize options
# D       built-in: Choose and detach a client from a list
# E       built-in: Spread panes out evenly
# F       custom: grab panel from window as horizontal
# H       pain-control: resize narrower
# J       pain-control: resize shorter
# K       pain-control: resize higher
# L       pain-control: resize wider
# M       built-in: Clear the marked pane
# O       custom: toggle mouse
# P       tome: scratch book
# T       custom: send panel to window as horizontal
# [       built-in: Enter copy mode
# ]       built-in: Paste the most recent paste buffer
# a       custom: Detach the current client
# d       built-in: Detach the current client
# f       custom: grab panel from window as vertical
# h       pain-control: move left
# i       built-in: Display window information
# j       pain-control: move down
# k       pain-control: move up
# l       pain-control: move right
# m       built-in: Toggle the marked pane
# n       built-in: Select the next window
# o       built-in: Select the next pane
# p       built-in: Select the previous window
# q       built-in: Display pane numbers
# r       custom: reload config
# s       built-in: Choose a session from a list
# t       custom: send panel to window as vertical
# u       built-in: Jump to pane location in copy mode
# w       built-in: Choose a window from a list
# x       built-in: Kill the active pane
# z       built-in: Zoom the active pane
# <       pain-control: move window left
# >       pain-control: move window right

# \       menus: open popup menu
# |       pain-control: split pane right
# \       (overwritten) pain-control: spli pane right (full)
# -       pain-control: split pane bottom
# _       pain-control: split pane bottom (full height)

# {       built-in: Swap the active pane with the pane above
# }       built-in: Swap the active pane with the pane below
# ~       built-in: Show messages
# DC      built-in: Reset so the visible part of the window follows the cursor
# PPage   built-in: Enter copy mode and scroll up
# Up      built-in: Select the pane above the active pane
# Down    built-in: Select the pane below the active pane
# Left    built-in: Select the pane to the left of the active pane
# Right   built-in: Select the pane to the right of the active pane
# M-1     built-in: Set the even-horizontal layout
# M-2     built-in: Set the even-vertical layout
# M-3     built-in: Set the main-horizontal layout
# M-4     built-in: Set the main-vertical layout
# M-5     built-in: Select the tiled layout
# M-n     built-in: Select the next window with an alert
# M-o     built-in: Rotate through the panes in reverse
# M-p     built-in: Select the previous window with an alert
# M-Up    built-in: Resize the pane up by 5
# M-Down  built-in: Resize the pane down by 5
# M-Left  built-in: Resize the pane left by 5
# M-Right built-in: Resize the pane right by 5
# C-p     tome: playbook book
# C-Up    built-in: Resize the pane up
# C-Down  built-in: Resize the pane down
# C-Left  built-in: Resize the pane left
# C-Right built-in: Resize the pane right
# S-Up    built-in: Move the visible part of the window up
# S-Down  built-in: Move the visible part of the window down
# S-Left  built-in: Move the visible part of the window left
# S-Right built-in: Move the visible part of the window right
